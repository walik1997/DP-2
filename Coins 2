#time complexity-O(mn)
class Solution:
    def coinChange(self, coins: list[int], amount: int) -> int:
        m = len(coins)
        n = amount
        
        dp = [[int(0)] * (n + 1) for _ in range(m + 1)]
        dp[0][0]=0
        for i in range(1,n+1):
            dp[0][i] = 99000
        for i in range(1, m + 1):
            for j in range(1, n + 1):
                if coins[i-1]>j:
                    dp[i][j]=dp[i-1][j]
                if (coins[i-1]<=j) :
                    if coins[i-1]<=j:
                        a=min(dp[i-1][j],(dp[i][j-coins[i-1]])+1)
                        dp[i][j]=a
                    else:
                        a=min(dp[i-1][j],(dp[i][coins[i-1]-j])+1)
                        dp[i][j]=a
        if dp[m][n]>=99000:
            return -1
        else:
            return dp[m][n]

